---
import '../styles/tailwind.css';
import '../styles/global.css';
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Projects — Arynwood Terminal</title>
  <style>
    body {
      margin: 0;
      padding: 2rem;
      background-color: #0e0e0e;
      color: #dcdcdc;
      font-family: 'JetBrains Mono', monospace;
    }

    .terminal {
      max-width: 800px;
      margin: auto;
      background-color: #121212;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 0 20px rgba(185, 170, 255, 0.2);
    }

    .prompt {
      color: #b9aaff;
    }

    h1 {
      color: #b9aaff;
      font-size: 1.8rem;
      margin-bottom: 1.5rem;
      border-bottom: 1px solid #3b2c61;
      padding-bottom: 0.5rem;
    }

    ul {
      list-style: none;
      padding-left: 0;
    }

    li {
      margin-bottom: 2rem;
      font-size: 1rem;
      line-height: 1.6;
    }

    a,
    a:visited,
    a:focus,
    a:active {
      color: #b9aaff;
      text-decoration: underline;
    }

    a:hover {
      color: #b48eff;
    }

    .note {
      font-size: 0.85rem;
      color: #888;
    }

    .gui-toggle {
      margin-top: 2rem;
      color: #888;
      cursor: pointer;
      font-size: 0.9rem;
      text-align: right;
    }

    .gui-toggle:hover {
      color: #b9aaff;
    }
  </style>
</head>
<body>
  <div class="terminal">
    <h1>Projects</h1>
    <ul>
      <li>
        My 3D Metaverse Gallery is an interactive virtual space built using Three.js. It features dynamically loaded artwork textures, orbit controls, and a custom spotlight system designed to simulate the ambiance of a modern digital exhibition hall.
        <br />
        <a href="https://arynwood.com/gallery3D" target="_blank">3D Metaverse Gallery</a>
      </li>

      <li>
        The Spotify Playlist Maker is a Rust CLI tool that interfaces with the Spotify API to generate personalized playlists based on your preferences. It’s packaged as a published crate and demonstrates API integration, OAuth, and modular CLI design.
        <br />
        <a href="https://github.com/SkyeVault/Main/blob/main/Rust_Projects/spotify_playlist_maker/readme.md" target="_blank">
          Spotify Playlist Maker
        </a>
      </li>

      <li>
        The Lorelei NFT Collection is an on-chain gallery deployed on the Polygon Amoy testnet. Built with Foundry, Solidity, and OpenZeppelin, the contract allows for minting, metadata updates via IPFS, and future integration with on-chain utilities.
        <br />
        <a href="https://testnets.opensea.io/collection/loreleinoblegenesis" target="_blank">
          Lorelei NFT Gallery
        </a>
        <span class="note">(mainnet coming soon)</span>
      </li>

      <li>
        Rainkeep is my running DevLog — a technical journal documenting everything I build. From Web3 experiments to Three.js layouts and Rust crates, I use this blog to share project progress, lessons learned, and code-based breakthroughs.
        <br />
        <a href="/blog">DevLog (Rainkeep)</a>
      </li>
    <ul>
      <li>
        My 3D Metaverse Gallery is an interactive virtual space built using Three.js. It features dynamically loaded artwork textures, orbit controls, and a custom spotlight system designed to simulate the ambiance of a modern digital exhibition hall.
        <br />
        <a href="https://arynwood.com/gallery3D" target="_blank">3D Metaverse Gallery</a>
      </li>

      <li>
        The Spotify Playlist Maker is a Rust CLI tool that interfaces with the Spotify API to generate personalized playlists based on your preferences. It’s packaged as a published crate and demonstrates API integration, OAuth, and modular CLI design.
        <br />
        <a href="https://github.com/SkyeVault/Main/blob/main/Rust_Projects/spotify_playlist_maker/readme.md" target="_blank">
          Spotify Playlist Maker
        </a>
      </li>

      <li>
        The Lorelei NFT Collection is an on-chain gallery deployed on the Polygon Amoy testnet. Built with Foundry, Solidity, and OpenZeppelin, the contract allows for minting, metadata updates via IPFS, and future integration with on-chain utilities.
        <br />
        <a href="https://testnets.opensea.io/collection/loreleinoblegenesis" target="_blank">
          Lorelei NFT Gallery
        </a>
        <span class="note">(mainnet coming soon)</span>
      </li>

      <li>
        Arynwood Robot is the front-end shell for a personalized chatbot interface. It currently runs a Zephyr-based language model with plans to shift toward a fully offline, locally hosted LLM system on upgraded hardware. Security and autonomy are core goals.
        <br />
        <a href="https://arynwood.com/robot" target="_blank">Arynwood Robot</a>
        <span class="note">(local bot coming soon)</span>
      </li>

      <li>
        Rainkeep is my running DevLog — a technical journal documenting everything I build. From Web3 experiments to Three.js layouts and Rust crates, I use this blog to share project progress, lessons learned, and code-based breakthroughs.
        <br />
        <a href="/blog">DevLog (Rainkeep)</a>
      </li>
    </ul>
    </ul>

    <div class="gui-toggle"><a href="/">[ Back to terminal home ]</a></div>
  </div>
</body>
</html>