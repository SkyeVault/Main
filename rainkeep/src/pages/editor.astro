---
const title = "Astro Editor â€“ Markdown & HTML";
import HamburgerNav from '../layouts/HamburgerNav.astro';
---

<HamburgerNav {title}>
  <p class="prompt">&gt; Switch between Markdown or HTML editing and preview your work</p>
  <p class="excerpt">Write in either editor and see your result live</p>

  <style>
    .tab-buttons {
      display: flex;
      margin-top: 1rem;
      background: #111;
      border-bottom: 1px solid #444;
    }
    .tab-button {
      flex: 1;
      padding: 0.75rem;
      text-align: center;
      background: #111;
      color: #ccc;
      border: none;
      cursor: pointer;
      font-family: monospace;
      font-size: 1rem;
    }
    .tab-button.active {
      background: #222;
      color: #fff;
      border-bottom: 2px solid #8f6ef7;
    }
    .tab-panel {
      display: none;
      height: 60vh;
      width: 100%;
    }
    .tab-panel.active {
      display: block;
    }
    textarea {
      background: #1e1e1e;
      color: #f8f8f2;
      font-family: monospace;
      padding: 1rem;
      width: 100%;
      height: 100%;
      border: none;
      resize: none;
      font-size: 1rem;
    }
    #previewArea {
      background: #111;
      color: #eee;
      padding: 1rem;
      overflow-y: auto;
      font-family: sans-serif;
      height: 60vh;
      width: 100%;
    }

    details.cheatsheet {
      margin-top: 1rem;
      background: #181818;
      border: 1px solid #333;
      padding: 1rem;
      font-family: monospace;
      color: #ccc;
    }

    summary {
      cursor: pointer;
      font-weight: bold;
      color: #8f6ef7;
    }

    .cheatsheet pre {
      margin-top: 0.5rem;
      white-space: pre-wrap;
      font-size: 0.95rem;
      line-height: 1.4;
    }
  </style>

  <details class="cheatsheet">
    <summary>Markdown Cheatsheet</summary>
    <pre>
# Heading 1
## Heading 2
**Bold**, *Italic*, ~~Strikethrough~~

- Bullet
1. Numbered

[Link](https://example.com)
\`Inline code\`
\`\`\`
Code block
\`\`\`

> Blockquote
    </pre>
  </details>

  <details class="cheatsheet">
    <summary>HTML Cheatsheet</summary>
    <pre>
&lt;h1&gt;Heading 1&lt;/h1&gt;
&lt;p&gt;Paragraph text&lt;/p&gt;

&lt;strong&gt;Bold&lt;/strong&gt; and &lt;em&gt;Italic&lt;/em&gt;

&lt;ul&gt;
  &lt;li&gt;List item&lt;/li&gt;
&lt;/ul&gt;

&lt;a href="https://example.com"&gt;Link&lt;/a&gt;
&lt;img src="image.jpg" alt="desc" /&gt;

&lt;code&gt;Inline code&lt;/code&gt;
&lt;pre&gt;
  Code block
&lt;/pre&gt;
    </pre>
  </details>

  <div class="tab-buttons">
    <button class="tab-button active" onclick="showEditor('markdown')">Markdown</button>
    <button class="tab-button" onclick="showEditor('html')">HTML</button>
    <button class="tab-button" onclick="showEditor('preview')">Preview</button>
  </div>

  <div id="markdownTab" class="tab-panel active">
    <textarea id="markdownEditor" placeholder="Write Markdown here..."></textarea>
  </div>

  <div id="htmlTab" class="tab-panel">
    <textarea id="htmlEditor" placeholder="Write raw HTML here..."></textarea>
  </div>

  <div id="previewTab" class="tab-panel">
    <div id="previewArea"></div>
  </div>

  <script is:inline>
    const markdownEditor = document.getElementById('markdownEditor');
    const htmlEditor = document.getElementById('htmlEditor');
    const previewArea = document.getElementById('previewArea');

    let lastEdited = 'markdown';

    function renderMarkdown(text) {
      return text
        .replace(/^# (.*$)/gim, '<h1>$1</h1>')
        .replace(/^## (.*$)/gim, '<h2>$1</h2>')
        .replace(/^### (.*$)/gim, '<h3>$1</h3>')
        .replace(/\*\*(.*?)\*\*/gim, '<strong>$1</strong>')
        .replace(/\*(.*?)\*/gim, '<em>$1</em>')
        .replace(/~~(.*?)~~/gim, '<del>$1</del>')
        .replace(/`(.*?)`/gim, '<code>$1</code>')
        .replace(/\[([^\]]+)\]\(([^)]+)\)/gim, '<a href="$2" target="_blank">$1</a>')
        .replace(/\n/gim, '<br />');
    }

    function showEditor(tab) {
      document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
      document.querySelectorAll('.tab-panel').forEach(panel => panel.classList.remove('active'));

      document.querySelector(`.tab-button[onclick*="${tab}"]`).classList.add('active');
      document.getElementById(`${tab}Tab`).classList.add('active');

      if (tab === 'preview') {
        if (lastEdited === 'markdown') {
          previewArea.innerHTML = renderMarkdown(markdownEditor.value);
        } else if (lastEdited === 'html') {
          previewArea.innerHTML = htmlEditor.value;
        }
      }
    }

    markdownEditor.addEventListener('input', () => {
      lastEdited = 'markdown';
    });

    htmlEditor.addEventListener('input', () => {
      lastEdited = 'html';
    });

    markdownEditor.value = `# Welcome
This is your **Markdown Editor**

- Try writing headers
- Lists
- Code blocks

[Click here](https://openai.com)
`;
  </script>
</HamburgerNav>